package com.springboot.controller;

import com.springboot.model.Doctor;
import com.springboot.service.DoctorService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class DoctorController {

	@Autowired
	private DoctorService service;

	@GetMapping("/add/doctor")
	public Doctor addDoctor(@RequestParam("doctorId") String doctorId,
							@RequestParam("name") String name,
							@RequestParam("experience") String experience
	) {
		Double exp = Double.parseDouble(experience);
		return service.createDoctor(doctorId, name, exp);
	}

	@GetMapping("/remove/doctor")
	public String removeDoctor(@RequestParam("doctorId") String doctorId) {
		return service.deleteDoctor(doctorId);
	}
}
---------------------------------------------
package com.springboot.service;

import org.springframework.stereotype.Service;
import com.springboot.model.Doctor;

@Service
public class DoctorService {

    public Doctor createDoctor(String doctorId,
                               String name,
                               Double experience) {
        Doctor doc = new Doctor(doctorId,name,experience );
        return doc;
    }

    public String deleteDoctor(String doctorId) {
        return "Doctor removed";
    }
}
-----------------------------------------------
package com.springboot;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.EnableAspectJAutoProxy;

@SpringBootApplication
@EnableAspectJAutoProxy(proxyTargetClass=true)
public class App {

    public static void main(String[] args) {
		SpringApplication.run(App.class, args);
	}
}
-------------------------------------------------
package com.springboot.model;

public class Doctor {
	
	private String doctorId;
	private String name;
	private Double experience;
		
	public Doctor(String doctorId, String name, Double experience) {
		super();
		this.doctorId = doctorId;
		this.name = name;
		this.experience = experience;
	}
	
	public String getId() {
		return doctorId;
	}
	public void setId(String doctorId) {
		this.doctorId = doctorId;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Double getExperience() {
		return experience;
	}
	public void setExperience(Double experience) {
		this.experience = experience;
	}
	
	
}
--------------------------------------------
package com.springboot.aspect;

import org.aspectj.lang.*;
import org.aspectj.lang.annotation.*;
import org.springframework.stereotype.Component;

@Aspect
public class DoctorServiceAspect {

	@Before("execution(public * createDoctor(id, name, experience) )")
	public void beforeAdvice(JoinPoint jp, String id, String name, Double experience) {
		System.out.println(jp.getSignature());
		System.out.println("Before method:Doctor com.springboot.service.DoctorService.createDoctor(String,String,Double)");
		System.out.println("Creating doctor with id - " + id + ", name - " + name + " and experience - " + experience);
	}

	@Before("execution(* removeDoctor(doctorId))")
	public void beforeAdvice(JoinPoint jp, String doctorId) {
		System.out.println("Before method:Doctor com.springboot.service.DoctorService.deleteDoctor(String)");
		System.out.println("Deleting doctor with id - " + doctorId);
	}

}
------------------------------------------------
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.javatpoint</groupId>
	<artifactId>aop-before-advice-example</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<packaging>jar</packaging>

	<name>aop-before-advice-example</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<!--<scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.5</version>
		</dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180130</version>
        </dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>

